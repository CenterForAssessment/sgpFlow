% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createLookupTables.R
\name{createLookupTables}
\alias{createLookupTables}
\title{Create Lookup Tables for SGP Analysis}
\usage{
createLookupTables(
  state,
  sgp.config,
  parallel.config,
  matrices = NULL,
  lookup_table_types = c("single-cohort", "super-cohort")
)
}
\arguments{
\item{state}{A character string acronymn indicating the state for which the lookup tables are being created.}

\item{sgp.config}{A list containing the sgpFlow configuration settings, including panel years and other required parameters.}

\item{parallel.config}{A list specifying parallel computation configurations for SGP calculations.}

\item{matrices}{A list of coefficient matrices for the sgpFlow analyses. If not provided, the function attempts to retrieve matrices from the `sgpFlowMatrices` package. Default: `NULL`.}

\item{lookup_table_types}{A character vector specifying the types of lookup tables to generate. Options include `"single-cohort"` and `"super-cohort"`. Default: `c("single-cohort", "super-cohort")`.}
}
\value{
A set of lookup tables saved as `.Rdata` and `.csv.gzip` files in a `Data` directory, organized by the type of lookup table.
}
\description{
This function generates lookup tables from sgpFlow analyses. It allows for the creation of percentile and projection lookup tables based on the provided state, configuration settings, provided sgpFlow matrices.
}
\details{
This function:
- Validates the availability of necessary matrices.
- Adds matrices to state-level SGP configuration data.
- Generates scale score permutations and embeds them into an SGP object.
- Runs the `abcSGP` process for baseline percentile calculations.
- Saves the resulting lookup tables in specified file formats.

The function can handle single-cohort and super-cohort data structures, allowing for flexible analysis configurations.
}
\note{
This function is not exported and is intended for internal use only.
}
\examples{
\dontrun{
if(interactive()){
  createLookupTables(
     state = "DEMO",
     sgp.config = DEMO_Lookup_Table.config[[1]],
     parallel.config = list(BACKEND="PARALLEL", WORKERS=list(BASELINE_PERCENTILES=num_cores)),
     lookup_table_types = c('single-cohort', 'super-cohort')
  )
}
}
}
\seealso{
\code{\link[sgpFlowMatrices]{sgpFlowMatrices}}
 \code{\link[methods]{new}}
 \code{\link[SGP]{abcSGP}}
 \code{\link[data.table]{setDTthreads}}, \code{\link[data.table]{fwrite}}
}
\keyword{internal}
