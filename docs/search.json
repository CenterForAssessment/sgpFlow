[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to the effective data visualisation with R workshop!\nTuesday 6th December 2022\n 9.00AM - 12.00PM AEDT\n Zoom (links provided to participants via email)"
  },
  {
    "objectID": "about.html#materials",
    "href": "about.html#materials",
    "title": "About",
    "section": "Materials",
    "text": "Materials\nAll materials are hosted on a GitHub repo here and can be downloaded here as a zip file (including the website, slides and exercises).\nOnce the material is downloaded, open the docs/index.html in a browser to see this website (emitanaka.org/EDVR-workshop)."
  },
  {
    "objectID": "about.html#schedule",
    "href": "about.html#schedule",
    "title": "About",
    "section": "Schedule",
    "text": "Schedule"
  },
  {
    "objectID": "about.html#installation",
    "href": "about.html#installation",
    "title": "About",
    "section": "Installation",
    "text": "Installation\nThis is only needed if the exercise links above do not work for you.\n\ninstall.packages(c(\"remotes\", \"learnr\"))\nremotes::install_github(\"emitanaka/EDVR-workshop/pkg\")"
  },
  {
    "objectID": "about.html#exercises",
    "href": "about.html#exercises",
    "title": "About",
    "section": "Exercises",
    "text": "Exercises\nTo run the exercises locally, install the packages under Installation and then run:\n\nlearnr::run_tutorial(\"exercise-01\", package = \"edvr.workshop\")\nlearnr::run_tutorial(\"exercise-02\", package = \"edvr.workshop\")"
  },
  {
    "objectID": "content/presentations/Accountability_System_Coherence.html#gills-infographic",
    "href": "content/presentations/Accountability_System_Coherence.html#gills-infographic",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Gill’s Infographic",
    "text": "Gill’s Infographic\n\n\n\n\nGill’s focus is on the quality of the three components as opposed to how they fit together.1\nGill’s ordering of the components from left to right opposite of how they occur temporally: Processes lead to Impacts lead to which lead to Outcomes.\nThough the quality of the components is important, I argue that the connection between the components is more important.\nThis incoherence is what I intend to address and solve.\n\n\n\n\n\nWithin the fine print of Gill’s infographic for Processes he does point out that “… and other activities that produce the impacts leading to the improved student outcomes.”"
  },
  {
    "objectID": "content/presentations/Accountability_System_Coherence.html#coherent-components",
    "href": "content/presentations/Accountability_System_Coherence.html#coherent-components",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Coherent Components",
    "text": "Coherent Components\n\n\n\n\nThis modified infographic correctly orders the Processes, Impacts, and Outcomes components.\nGrowth and Status indicators are indicated to the right of the infographic: Growth is a leading indicator whereas Status is a lagging indicator.\nGrowth is the bridge connecting Processes to Outcomes."
  },
  {
    "objectID": "content/presentations/Accountability_System_Coherence.html#why-coherence-is-critical",
    "href": "content/presentations/Accountability_System_Coherence.html#why-coherence-is-critical",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Why Coherence is Critical?",
    "text": "Why Coherence is Critical?"
  },
  {
    "objectID": "content/presentations/Accountability_System_Coherence.html#what-is-equity",
    "href": "content/presentations/Accountability_System_Coherence.html#what-is-equity",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "What is Equity?",
    "text": "What is Equity?"
  },
  {
    "objectID": "news.html",
    "href": "news.html",
    "title": "News",
    "section": "",
    "text": "In this 3 hour tutorial, I will demonstrate some cognitive principles and apply methods supported by empirical studies that make data visualisation more effective. The construction of data visualisation will be accompanied with R code using the ggplot2 package. The R code and data used will be provided so participants can fully replicate the presented data visualisations.\nParticipants are expected to know how to use R. Some knowledge in tidyverse would be beneficial. You can find an interactive introduction to data analysis with R at https://learnr.numbat.space/."
  },
  {
    "objectID": "news.html#biography-of-workshop-presenter",
    "href": "news.html#biography-of-workshop-presenter",
    "title": "News",
    "section": "Biography of Workshop Presenter",
    "text": "Biography of Workshop Presenter\nDr. Emi Tanaka is a Senior Lecturer in Statistics at Monash University whose primary interest is to develop impactful statistical methods and tools that can readily be used by practitioners. Her research area includes data visualisation, mixed models and experimental designs, motivated primarily by problems in bioinformatics and agricultural sciences. She is currently the President of the Statistical Society of Australia Victorian Branch and the recipient of the Distinguished Presenter’s Award from the Statistical Society of Australia for her delivery of a wide-range of R workshops."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "",
    "text": "The packageSkeleton repository provides a streamlined template for setting up an R package, complete with an integrated Quarto website hosted on GitHub. This skeleton is designed to simplify the often daunting process of creating, maintaining, and distributing an R package, making GitHub an ideal platform for collaboration, version control, and sharing your work.\nWhether you’re an experienced R developer or new to package development, this skeleton offers a robust starting point. The primary advantage of using this skeleton is that it handles much of the initial setup, allowing you to focus on personalizing the package to meet your specific needs. This includes: - Customizing the package name, - Adding your own functions, - Creating a website to document and showcase your work."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "",
    "text": "The packageSkeleton repository provides a streamlined template for setting up an R package, complete with an integrated Quarto website hosted on GitHub. This skeleton is designed to simplify the often daunting process of creating, maintaining, and distributing an R package, making GitHub an ideal platform for collaboration, version control, and sharing your work.\nWhether you’re an experienced R developer or new to package development, this skeleton offers a robust starting point. The primary advantage of using this skeleton is that it handles much of the initial setup, allowing you to focus on personalizing the package to meet your specific needs. This includes: - Customizing the package name, - Adding your own functions, - Creating a website to document and showcase your work."
  },
  {
    "objectID": "index.html#why-create-an-r-package",
    "href": "index.html#why-create-an-r-package",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Why Create an R Package?",
    "text": "Why Create an R Package?\nCreating an R package isn’t just about building tools for others—it’s about building something useful for you. By consolidating functions, data sets, and workflows you use regularly into a package, you streamline your own work. Additionally, your solutions may end up being valuable to others who work in similar domains.\nThis package skeleton encourages that mindset, helping you create something that is immediately useful in your own workflow while also providing a structure for sharing your work with the broader R community."
  },
  {
    "objectID": "index.html#what-youll-need",
    "href": "index.html#what-youll-need",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "What You’ll Need",
    "text": "What You’ll Need\nTo get the most out of the package skeleton, a few foundational skills and concepts will be useful:\n\nGitHub Basics: Familiarity with cloning repositories, making commits, and pushing changes is essential.\nR and R Package Basics: Understand how R packages are structured and function.\nQuarto Basics: Quarto will help you build documentation and websites for your package.\nPackage Content: Consider including:\n\nData cleaning functions,\nCustom wrapper functions,\nData sets you frequently use,\nReused code from other open-source packages (with proper attribution)."
  },
  {
    "objectID": "index.html#getting-started",
    "href": "index.html#getting-started",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Getting Started",
    "text": "Getting Started\nWe’ve provided a detailed vignette that walks you through the essential steps for setting up your own R package and Quarto website, including: 1. Cloning the repository and customizing it for your own package. 2. Setting up the Quarto website for documenting your functions and workflows. 3. Using GitHub for version control, collaboration, and package distribution.\nStart building your R package today to make your work more efficient, organized, and shareable!"
  },
  {
    "objectID": "documents.html",
    "href": "documents.html",
    "title": "Documents",
    "section": "",
    "text": "In this 3 hour tutorial, I will demonstrate some cognitive principles and apply methods supported by empirical studies that make data visualisation more effective. The construction of data visualisation will be accompanied with R code using the ggplot2 package. The R code and data used will be provided so participants can fully replicate the presented data visualisations.\nParticipants are expected to know how to use R. Some knowledge in tidyverse would be beneficial. You can find an interactive introduction to data analysis with R at https://learnr.numbat.space/."
  },
  {
    "objectID": "documents.html#biography-of-workshop-presenter",
    "href": "documents.html#biography-of-workshop-presenter",
    "title": "Documents",
    "section": "Biography of Workshop Presenter",
    "text": "Biography of Workshop Presenter\nDr. Emi Tanaka is a Senior Lecturer in Statistics at Monash University whose primary interest is to develop impactful statistical methods and tools that can readily be used by practitioners. Her research area includes data visualisation, mixed models and experimental designs, motivated primarily by problems in bioinformatics and agricultural sciences. She is currently the President of the Statistical Society of Australia Victorian Branch and the recipient of the Distinguished Presenter’s Award from the Statistical Society of Australia for her delivery of a wide-range of R workshops."
  },
  {
    "objectID": "documents.html#lorum-ipsum",
    "href": "documents.html#lorum-ipsum",
    "title": "Documents",
    "section": "Lorum Ipsum",
    "text": "Lorum Ipsum\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
  },
  {
    "objectID": "getting_started.html",
    "href": "getting_started.html",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "Welcome to packageSkeleton, a template designed to help you set up and develop an R package alongside a Quarto-powered website hosted on GitHub. This guide will walk you through the necessary steps for getting started, including installing required software, setting up your GitHub account, forking the repository, and customizing both the R package and the website.\n\n\n\nBefore using packageSkeleton, you need to have the following tools installed on your computer, and you’ll need a GitHub account to manage your project.\n\n\n\nR: Ensure that you have the latest version of R installed. You can download it from CRAN.\nRStudio (Optional but Recommended): RStudio is a popular IDE for working with R. It simplifies the development process and integrates well with GitHub and Quarto.\nQuarto: Quarto is used to build the website associated with your R package. Install Quarto by following the instructions on Quarto’s website.\n\nOn macOS:\nbrew install quarto\nOn Windows: Download and run the installer from Quarto’s download page.\n\nGit: Install Git, which will allow you to interact with GitHub and version control your project.\n\nOn macOS:\nbrew install git\nOn Windows: Download and install Git for Windows.\n\n\n\n\n\n\n\nYou will need a GitHub account to manage your project repository and host the website. If you don’t have a GitHub account yet, sign up for free here.\n\n\n\nGo to the packageSkeleton GitHub repository.\nClick the “Fork” button in the top-right corner to create a personal copy of the repository under your GitHub account.\nOnce forked, you will have your own version of packageSkeleton to work with.\n\n\n\n\nOnce you’ve forked the repo, clone it to your local machine using Git. In RStudio, you can do this by going to File &gt; New Project &gt; Version Control &gt; Git. Alternatively, use the command line:\ngit clone https://github.com/&lt;your-username&gt;/packageSkeleton.git\ncd packageSkeleton\nThis will download the repository to your computer, where you can start making changes.\n\n\n\n\nNow that you have the project on your machine, it’s time to customize the R package.\n\n\nBy default, the package is called packageSkeleton. To personalize it:\n\nOpen the DESCRIPTION file.\nChange the Package field to your desired package name:\n\nPackage: MyPackageName\n\n\n\n\n\n\n\nInside the R/ directory, add your own R scripts that define the functions you want to include in your package.\nEach R script should follow the convention of documenting the functions using roxygen comments. For example:\n\n# A Sample Function\nsample_function &lt;- function(x) {\n  x^2\n}\n\n\n\nOnce you’ve added your custom functions, it’s important to build and test the package. You can do this in RStudio or via the command line:\ndevtools::build()\ndevtools::check()\n\n\n\n\nYour packageSkeleton project comes with a Quarto-based website that documents your package. Let’s walk through customizing it.\n\n\nOpen the _quarto.yml file in the project. This file controls the structure and appearance of the website.\n\nUpdate the title, author, and repo-url fields to match your package details.\n\nproject:\n  type: website\ntitle: \"MyPackageName\"\nauthor: \"Your Name\"\nrepo-url: \"https://github.com/&lt;your-username&gt;/MyCustomPackage\"\n\n\n\nYou can edit the content of the website by modifying the .qmd files located in the root directory.\n\nindex.qmd: This is the homepage of your Quarto site.\ngetting_started.qmd: This file can serve as a guide for users getting started with your package (like the one you’re reading now).\nreference.qmd: This file provides a function reference for your package.\n\n\n\n\nTo build the website and preview it locally, run the following commands in your terminal or RStudio console:\nquarto render\nquarto preview\nThis will render the documents and start a local server where you can view the site. Any changes you make will automatically be reflected in the browser.\n\n\n\nOnce you’re happy with your customizations, you can publish the website on GitHub Pages. If you’ve forked the packageSkeleton repo, GitHub Pages will be set up to build from the docs/ folder. Simply push your changes to GitHub, and the site will be automatically updated.\n\n\n\n\nAs the original packageSkeleton repo might get updates, it’s good practice to keep your fork in sync. You can do this by fetching and merging changes from the original repository:\ngit remote add upstream https://github.com/CenterForAssessment/packageSkeleton.git\ngit fetch upstream\ngit merge upstream/main\nThis will pull in the latest changes from the upstream repo.\n\n\n\nYou’re now ready to start building your own R package with an integrated Quarto website. Follow the steps above to customize the package, document your functions, and share your work with others through GitHub and GitHub Pages. If you run into any issues, check out the vignette for more detailed instructions.\nHappy coding!"
  },
  {
    "objectID": "getting_started.html#requirements",
    "href": "getting_started.html#requirements",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "Before using packageSkeleton, you need to have the following tools installed on your computer, and you’ll need a GitHub account to manage your project.\n\n\n\nR: Ensure that you have the latest version of R installed. You can download it from CRAN.\nRStudio (Optional but Recommended): RStudio is a popular IDE for working with R. It simplifies the development process and integrates well with GitHub and Quarto.\nQuarto: Quarto is used to build the website associated with your R package. Install Quarto by following the instructions on Quarto’s website.\n\nOn macOS:\nbrew install quarto\nOn Windows: Download and run the installer from Quarto’s download page.\n\nGit: Install Git, which will allow you to interact with GitHub and version control your project.\n\nOn macOS:\nbrew install git\nOn Windows: Download and install Git for Windows."
  },
  {
    "objectID": "getting_started.html#set-up-a-github-account-and-fork-the-repository",
    "href": "getting_started.html#set-up-a-github-account-and-fork-the-repository",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "You will need a GitHub account to manage your project repository and host the website. If you don’t have a GitHub account yet, sign up for free here.\n\n\n\nGo to the packageSkeleton GitHub repository.\nClick the “Fork” button in the top-right corner to create a personal copy of the repository under your GitHub account.\nOnce forked, you will have your own version of packageSkeleton to work with.\n\n\n\n\nOnce you’ve forked the repo, clone it to your local machine using Git. In RStudio, you can do this by going to File &gt; New Project &gt; Version Control &gt; Git. Alternatively, use the command line:\ngit clone https://github.com/&lt;your-username&gt;/packageSkeleton.git\ncd packageSkeleton\nThis will download the repository to your computer, where you can start making changes."
  },
  {
    "objectID": "getting_started.html#customizing-the-r-package",
    "href": "getting_started.html#customizing-the-r-package",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "Now that you have the project on your machine, it’s time to customize the R package.\n\n\nBy default, the package is called packageSkeleton. To personalize it:\n\nOpen the DESCRIPTION file.\nChange the Package field to your desired package name:\n\nPackage: MyPackageName"
  },
  {
    "objectID": "getting_started.html#update-the-package-name-in-other-places-such-as-the-namespace-and-r-files-where-it-is-referenced.",
    "href": "getting_started.html#update-the-package-name-in-other-places-such-as-the-namespace-and-r-files-where-it-is-referenced.",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "Inside the R/ directory, add your own R scripts that define the functions you want to include in your package.\nEach R script should follow the convention of documenting the functions using roxygen comments. For example:\n\n# A Sample Function\nsample_function &lt;- function(x) {\n  x^2\n}\n\n\n\nOnce you’ve added your custom functions, it’s important to build and test the package. You can do this in RStudio or via the command line:\ndevtools::build()\ndevtools::check()"
  },
  {
    "objectID": "getting_started.html#customizing-the-quarto-website",
    "href": "getting_started.html#customizing-the-quarto-website",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "Your packageSkeleton project comes with a Quarto-based website that documents your package. Let’s walk through customizing it.\n\n\nOpen the _quarto.yml file in the project. This file controls the structure and appearance of the website.\n\nUpdate the title, author, and repo-url fields to match your package details.\n\nproject:\n  type: website\ntitle: \"MyPackageName\"\nauthor: \"Your Name\"\nrepo-url: \"https://github.com/&lt;your-username&gt;/MyCustomPackage\"\n\n\n\nYou can edit the content of the website by modifying the .qmd files located in the root directory.\n\nindex.qmd: This is the homepage of your Quarto site.\ngetting_started.qmd: This file can serve as a guide for users getting started with your package (like the one you’re reading now).\nreference.qmd: This file provides a function reference for your package.\n\n\n\n\nTo build the website and preview it locally, run the following commands in your terminal or RStudio console:\nquarto render\nquarto preview\nThis will render the documents and start a local server where you can view the site. Any changes you make will automatically be reflected in the browser.\n\n\n\nOnce you’re happy with your customizations, you can publish the website on GitHub Pages. If you’ve forked the packageSkeleton repo, GitHub Pages will be set up to build from the docs/ folder. Simply push your changes to GitHub, and the site will be automatically updated."
  },
  {
    "objectID": "getting_started.html#keep-your-fork-synced",
    "href": "getting_started.html#keep-your-fork-synced",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "As the original packageSkeleton repo might get updates, it’s good practice to keep your fork in sync. You can do this by fetching and merging changes from the original repository:\ngit remote add upstream https://github.com/CenterForAssessment/packageSkeleton.git\ngit fetch upstream\ngit merge upstream/main\nThis will pull in the latest changes from the upstream repo."
  },
  {
    "objectID": "getting_started.html#start-building",
    "href": "getting_started.html#start-building",
    "title": "Getting Started with packageSkeleton",
    "section": "",
    "text": "You’re now ready to start building your own R package with an integrated Quarto website. Follow the steps above to customize the package, document your functions, and share your work with others through GitHub and GitHub Pages. If you run into any issues, check out the vignette for more detailed instructions.\nHappy coding!"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "MIT License",
    "section": "",
    "text": "The MIT License (MIT)\nCopyright (c) 2024 Damian W. Betebenner\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "presentations.html",
    "href": "presentations.html",
    "title": "Presentations",
    "section": "",
    "text": "In this 3 hour tutorial, I will demonstrate some cognitive principles and apply methods supported by empirical studies that make data visualisation more effective. The construction of data visualisation will be accompanied with R code using the ggplot2 package. The R code and data used will be provided so participants can fully replicate the presented data visualisations.\nParticipants are expected to know how to use R. Some knowledge in tidyverse would be beneficial. You can find an interactive introduction to data analysis with R at https://learnr.numbat.space/."
  },
  {
    "objectID": "presentations.html#biography-of-workshop-presenter",
    "href": "presentations.html#biography-of-workshop-presenter",
    "title": "Presentations",
    "section": "Biography of Workshop Presenter",
    "text": "Biography of Workshop Presenter\nDr. Emi Tanaka is a Senior Lecturer in Statistics at Monash University whose primary interest is to develop impactful statistical methods and tools that can readily be used by practitioners. Her research area includes data visualisation, mixed models and experimental designs, motivated primarily by problems in bioinformatics and agricultural sciences. She is currently the President of the Statistical Society of Australia Victorian Branch and the recipient of the Distinguished Presenter’s Award from the Statistical Society of Australia for her delivery of a wide-range of R workshops."
  },
  {
    "objectID": "reference.html",
    "href": "reference.html",
    "title": "Reference",
    "section": "",
    "text": "Function Reference\nBelow is the list of functions available in the packageSkeleton package.\n\n\n# DESCRIPTION\n\n``````\nPackage: packageSkeleton\nVersion: 0.0-0.1\nDate: 2024-10-14\nTitle: A GitHub repository featuring a starter template for R package development, paired with a Quarto-powered website\nDescription: The packageSkeleton R package provides a comprehensive template to jumpstart the development of an R package, complete with a structured framework for coding, documentation, and version control. It simplifies the process of setting up an R package repository on GitHub, offering built-in integration with Quarto for generating a professional, customizable website to showcase package documentation and vignettes. This template is designed to help both new and experienced R developers streamline package creation while ensuring best practices in documentation and collaboration. With minimal setup, users can focus on building and sharing valuable tools within the R ecosystem.\nAuthors@R: c(person(given=c(\"Damian\", \"W.\"), family=\"Betebenner\", email=\"dbetebenner@nciea.org\", role=c(\"aut\", \"cre\"), \n        comment = c(ORCID = \"0000-0003-0476-5599\")),\n                person(given=c(\"Adam\", \"R.\"), family=\"Van Iwaarden\", email=\"avaniwaarden@nciea.org\", role=\"aut\"))\nMaintainer: Damian W. Betebenner &lt;dbetebenner@nciea.org&gt;\nDepends: R (&gt;= 4.0)\nSuggests: knitr, rmarkdown\nImports: crayon, testthat, toOrdinal\nURL: https://CenterForAssessment.github.io/packageSkeleton\nBugReports: https://github.com/CenterForAssessment/packageSkeleton/issues\nVignetteBuilder: knitr\nLazyData: Yes\nLazyDataCompression: xz\nLazyLoad: Yes\nByteCompile: TRUE\nLicense: MIT + file LICENSE\nEncoding: UTF-8\n``````\n\n# `Hello_World`: Hello World Sample Dataset\n\n## Description\n\nThe `Hello_World` dataset provides a simple example with greetings in different languages, useful for illustrating basic data frame operations in R.\n\n## Usage\n\n``````r\nHello_World\n``````\n\n## Format\n\nA data frame with 10 rows and 2 variables:\n\n* `Language`: A character vector indicating the language of the Hello World greeting.\n* `Hello_World_Greeting`: A character vector containing the word \"Hello\" in different languages.\n\n## Source\n\nManually created for demonstration purposes.\n\n## Examples\n\n``````r\n# Display the hello_world dataset\nHello_World\n\n# Access the greeting column\nHello_World$Hello_World_Greeting\n\n# Access the language column\nHello_World$Language\n``````\n\n# `packageSkeleton-package`: A GitHub repository featuring a starter template for R package development, paired with a Quarto-powered website.\n\n## Description\n\nThe packageSkeleton R package provides a comprehensive template to jumpstart the development of an R package, complete with a structured framework for coding, documentation, and version control. It simplifies the process of setting up an R package repository on GitHub, offering built-in integration with Quarto for generating a professional, customizable website to showcase package documentation and vignettes. This template is designed to help both new and experienced R developers streamline package creation while ensuring best practices in documentation and collaboration. With minimal setup, users can focus on building and sharing valuable tools within the R ecosystem.\n\n## Keyword\n\npackage\n\n## Details\n\n|         |               |\n|---------|---------------|\n|Package: |packageSkeleton|\n|Type:    |Package        |\n|Version: |0.0-0.1        |\n|Date:    |2024-10-14     |\n|License: |GPL-3          |\n|LazyLoad:|yes            |\n\n## Author\n\nDamian W. Betebenner [DBetebenner@nciea.org](mailto:DBetebenner@nciea.org)\n\n# `strHead`: Returns the first `n` characters of a string, with support for negative values.\n\n## Description\n\nThe `strHead` function extracts the first `n` characters of a provided string. If `n_char` is positive, it returns the first `n_char` characters; if negative, it returns all but the last `abs(n_char)` characters. The function handles input validation, ensuring that `n_char` is within the bounds of the string length. It's useful for quickly trimming strings to desired lengths.\n\n## Usage\n\n``````r\nstrHead(\n    string,\n    n_char=1)\n``````\n\n## Arguments\n\n* `string`: Character string or vector of character strings.\n* `n_char`: Number of characters to take from the head (starting at the first character) of the string (or vector of strings). A positive value returns the first `n_char` characters, while a negative value removes the last `abs(n_char)` characters from the end. Defaults to 1.\n\n## Keyword\n\nmisc\n\n## Keyword\n\nmodels\n\n## Details\n\nThe `strHead` function is typically used to extract the first few characters from a character string or each string in a vector of character strings. This can be useful for truncating strings or extracting prefixes. The function supports both positive and negative values for `n_char`, allowing flexible string extraction. For positive values, the function returns the first `n_char` characters, while for negative values, it returns all but the last `abs(n_char)` characters.\n\n## Author\n\nDamian W. Betebenner [dbetebenner@nciea.org](mailto:dbetebenner@nciea.org)\n\n## Value\n\nThe function returns a character string or a vector of character strings, depending on the input. The output consists of the first `n_char` characters from each string in the input. If `n_char` is negative, the result excludes the last `abs(n_char)` characters from each string.\n\n## Examples\n\n``````r\n# Example 1: First two characters of each state name\nstrHead(state.name, 2)\n\n# Example 2: First three characters of a single string\nstrHead(\"California\", 3)\n\n# Example 3: Remove the last two characters from each string in a vector\nstrHead(c(\"apple\", \"banana\", \"cherry\"), -2)\n\n# Example 4: Get the first character of each month name\nstrHead(month.name, 1)\n\n# Example 5: Handle a vector of different length strings\nstrHead(c(\"wolf\", \"elephant\", \"giraffe\"), 4)\n``````\n\n# `strTail`: Returns the last `n` characters of a string, with support for negative values.\n\n## Description\n\nThe `strTail` function extracts the last `n` characters of a provided string. If `n_char` is positive, it returns the last `n_char` characters; if negative, it returns all but the first `abs(n_char)` characters. The function handles input validation, ensuring that `n_char` is within the bounds of the string length. It's useful for quickly trimming strings to desired lengths.\n\n## Usage\n\n``````r\nstrTail(\n    string,\n    n_char=1)\n``````\n\n## Arguments\n\n* `string`: Character string or vector of character strings.\n* `n_char`: Number of characters to take from the tail (starting at the last character) of the string (or vector of strings). A positive value returns the last `n_char` characters, while a negative value removes the first `abs(n_char)` characters from the start. Defaults to 1.\n\n## Keyword\n\nmisc\n\n## Keyword\n\nmodels\n\n## Details\n\nThe `strTail` function is commonly used to extract the last few characters from a character string or each string in a vector of character strings. This is helpful when you need to retrieve suffixes or the end portion of strings. The function supports both positive and negative values for `n_char`. For positive values, the function returns the last `n_char` characters, while for negative values, it excludes the first `abs(n_char)` characters from the start of each string.\n\n## Author\n\nDamian W. Betebenner [dbetebenner@nciea.org](mailto:dbetebenner@nciea.org)\n\n## Value\n\nThe function returns a character string or a vector of character strings, depending on the input. The output consists of the last `n_char` characters from each string in the input. If `n_char` is negative, the result excludes the first `abs(n_char)` characters from each string.\n\n## Examples\n\n``````r\n# Example 1: Last two characters of each state name\nstrTail(state.name, 2)\n\n# Example 2: Last three characters of a single string\nstrTail(\"California\", 3)\n\n# Example 3: Remove the first two characters from each string in a vector\nstrTail(c(\"apple\", \"banana\", \"cherry\"), -2)\n\n# Example 4: Get the last character of each month name\nstrTail(month.name, 1)\n\n# Example 5: Handle a vector of different length strings\nstrTail(c(\"wolf\", \"elephant\", \"giraffe\"), 4)\n``````"
  },
  {
    "objectID": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#gills-infographic",
    "href": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#gills-infographic",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Gill’s Infographic",
    "text": "Gill’s Infographic\n\n\n\n\nGill’s focus is on the quality of the three components as opposed to how they fit together.1\nGill’s ordering of the components from left to right is opposite of how they occur temporally: Processes lead to Impacts lead to which lead to Outcomes.\nThough the quality of the components is important, I argue that the connection between the components is more important.\nConnections between the components is part of the foundation of coherence.\n\n\n\n\n\nWithin the fine print of Gill’s infographic for Processes he does point out that “… and other activities that produce the impacts leading to the improved student outcomes.”"
  },
  {
    "objectID": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#coherent-components",
    "href": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#coherent-components",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Coherent Components",
    "text": "Coherent Components\n\n\n\n\nThis modified infographic correctly orders the Processes, Impacts, and Outcomes components.\nGrowth and Status indicators are indicated to the right of the infographic: Growth is a leading indicator whereas Status is a lagging indicator.\nGrowth is the bridge connecting Processes to Outcomes."
  },
  {
    "objectID": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#why-coherence-is-critical",
    "href": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#why-coherence-is-critical",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "Why Coherence is Critical?",
    "text": "Why Coherence is Critical?\n\n\n\n\nI’ve added to dashed lines to the figure indicating proper and improper connections between the components.\nThe red dashed line connecting outcomes to processes is improper but is done repeatedly even by experts in our field.\nThe black dashed line connecting growth to processes is the proper connection but is rarely used in accountability contexts.\n\nExamining the impact of processes has been the purview of educational research and program evaluation for over a century."
  },
  {
    "objectID": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#what-is-equity",
    "href": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#what-is-equity",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "What is Equity?",
    "text": "What is Equity?"
  },
  {
    "objectID": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#section-3",
    "href": "content/presentations/Staff_Meeting/Accountability_System_Coherence.html#section-3",
    "title": "Functions to perform sgpFlow analyses utilizing data derived from SGP analyses",
    "section": "",
    "text": "Attainment & Learning\n\n\nAnother example of of problematic terminology is the phrase “Assessment of learning”.\nIts problematic nature, however, helps illustrate a relationship necessary to begin fixing the problem.\nLearning is an unobserved process that occurs over time in the mind of the student.\n\nAssessments measure (or indicate) what a student knows and can do at a point in time.\nWe infer learning by observing attainment (either formally or informally) over time.\n\nLearning/Growth   is a leading indicator of attainment (SGPs, for example, are a coarse quantification of learning).\nAttainment   is a lagging indicator of learning/growth."
  }
]